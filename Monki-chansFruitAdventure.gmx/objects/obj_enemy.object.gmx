<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enemyHealth = 3;
enemyGravity = 0.1;
enemyXSpeed = 2;
enemyYSpeed = 2;
enemyXVelocity = 0;
enemyYVelocity = 0;
canJump = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if we can jump, add jump-parameters to velocities
if (canJump == true){
    enemyXVelocity += -enemyXSpeed;
    enemyYVelocity += -enemyYSpeed;
      
    canJump = false;
}

//set maximum velocity
if (enemyYVelocity &gt; 10){
    enemyYVelocity = 10;
}

enemyYVelocity += enemyGravity;

//if there is room for moving move player to the new point
if (place_free(x+enemyXVelocity, y+enemyYVelocity)){
      
    y += enemyYVelocity;
    x += enemyXVelocity;
}
//if place not free, move closer until hugging the wall
else if (place_free(x+sign(enemyXVelocity), y+sign(enemyYVelocity))){
    do {
        x += sign(enemyXVelocity);
        y += sign(enemyYVelocity);
    }
    until (!place_free(x+sign(enemyXVelocity), y+sign(enemyYVelocity)))
    enemyXVelocity = 0;
    enemyYVelocity = 0;
}

/////////////////////
///TÄHÄN JÄÄTIIN/////
/////////////////////
else if (place_free(x+sign(enemyXVelocity),y)){
    enemyXSpeed = -enemyXSpeed;
}

//if we are on the ground, stop
if (place_free(x,y+1) == false){
    enemyXVelocity = 0;
    enemyYVelocity = 0;
    canJump = true;
}
//if in air, add gravity
else{
    y += enemyGravity;   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
